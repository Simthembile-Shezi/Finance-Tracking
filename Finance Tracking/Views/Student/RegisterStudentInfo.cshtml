@model Finance_Tracking.Models.Student

@{
    ViewBag.Title = "RegisterStudentInfo";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Student Personal Info</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <fieldset class="documents-fieldset">
            <legend>Identity Information</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.Student_Nationality, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9 autocomplete">
                    @Html.EditorFor(model => model.Student_Nationality, new { htmlAttributes = new { @class = "form-control", @id = "nation", @placeholder = "Country" } })
                    @Html.ValidationMessageFor(model => model.Student_Nationality, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Student_Identity_Number, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Student_Identity_Number, new { htmlAttributes = new { @class = "form-control", @id = "idnumber", @oninput = "getID()", @minlength = "13", @maxlength = "13" } })
                    @Html.ValidationMessageFor(model => model.Student_Identity_Number, "", new { @class = "text-danger" })
                    <p id="invalid-ID" class="field-validation-valid text-danger"></p>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Date_Of_Birth, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Date_Of_Birth, new { htmlAttributes = new { @class = "form-control", @id = "DoB" } })
                    @Html.ValidationMessageFor(model => model.Date_Of_Birth, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <fieldset class="documents-fieldset">
            <legend>Personal Information</legend>
            <span class="text-danger">@ViewBag.SelectionError</span>
            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                     {
                        new SelectListItem{ Text="Select", Value = null, Selected =true},
                        new SelectListItem{ Text="Male", Value = "Male" },
                        new SelectListItem{ Text="Female", Value = "Female" },
                        new SelectListItem{ Text="Non-binary", Value = "Non-binary" },
                        new SelectListItem{ Text="Prefer not to say", Value = "Prefer not to say" },
                        }, new { @class = "login-input form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.Title, new List<SelectListItem>
                     {
                       new SelectListItem{ Text="Select", Value = null, Selected =true},
                        new SelectListItem{ Text="MR", Value = "MR" },
                        new SelectListItem{ Text="MRS", Value = "MRS" },
                        new SelectListItem{ Text="MS", Value = "MS" },
                        new SelectListItem{ Text="DOCTOR", Value = "DOCTOR" },
                        new SelectListItem{ Text="ADVOCATE", Value = "ADVOCATE" },
                        new SelectListItem{ Text="PROFESSOR", Value = "PROFESSOR" },
                        new SelectListItem{ Text="REVEREND", Value = "REVEREND" },
                     }, new { @class = "login-input form-control" })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Student_FName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Student_FName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Student_FName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Student_LName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Student_LName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Student_LName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Race, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.Race, new List<SelectListItem>
                    {
                      new SelectListItem{ Text="Select", Value = null, Selected =true},
                       new SelectListItem{ Text="African", Value = "African" },
                       new SelectListItem{ Text="Coloured", Value = "Coloured" },
                       new SelectListItem{ Text="Indian", Value = "Indian" },
                       new SelectListItem{ Text="Ndebele", Value = "Ndebele" },
                       new SelectListItem{ Text="North Sotho", Value = "North Sotho" },
                       new SelectListItem{Text="Other", Value="Other" },
                       new SelectListItem{ Text="South Sotho", Value = "South Sotho" },
                       new SelectListItem{ Text="Swati", Value = "Swati" },
                       new SelectListItem{ Text="Tsonga", Value = "Tsonga" },
                       new SelectListItem{ Text="Venda", Value = "Venda" },
                       new SelectListItem{ Text="White", Value = "White" },
                       new SelectListItem{ Text="Xhosa", Value = "Xhosa" },
                       new SelectListItem{ Text="Zulu", Value = "Zulu" },
                    }, new { @class = "login-input form-control" })
                    @Html.ValidationMessageFor(model => model.Race, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Marital_Status, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.Marital_Status, new List<SelectListItem>
                     {
                       new SelectListItem{ Text="Select", Value = null, Selected =true},
                        new SelectListItem{ Text="Single", Value = "Single" },
                        new SelectListItem{ Text="Married", Value = "Married" },
                        new SelectListItem{ Text="Divorced", Value = "Divorced" },
                        new SelectListItem{ Text="Widow/er", Value = "Widow/er" },
                     }, new { @class = "login-input form-control" })
                    @Html.ValidationMessageFor(model => model.Marital_Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <div class="form-group">
            @Html.Partial("_Register")
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


